# Use application.yml only for default values, use Environment Variables to configure the application

server:
  servlet:
    contextPath: /api


# Postgresql DB default Values
spring:
  database:
    driverClassName: org.postgresql.Driver
  datasource:
    url: jdbc:postgresql://localhost:5432/marina
    username: marina
    password: marina
   # to get rid of the exception at startup, see https://github.com/spring-projects/spring-boot/issues/12007
  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
  jackson:
    serialization:
      write-dates-as-timestamps: false
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  thymeleaf:
    cache: false
    enabled: true
    prefix: classpath:/pdf/
    suffix: .html

# Oauth Client configuration default values
security:
  user:
    password: password
  oauth2:
    client:
      clientId: marina
      clientSecret: 58554ee9-f3be-44a4-989c-578095ec8f1e
      accessTokenUri: http://localhost:8090/auth/realms/devenv/protocol/openid-connect/token
      userAuthorizationUri: http://localhost:8090/auth/realms/devenv/protocol/openid-connect/auth
      tokenName: access_token
      authenticationScheme: header
      clientAuthenticationScheme: header
    resource:
      userInfoUri: http://localhost:8090/auth/realms/devenv/protocol/openid-connect/userinfo


application:
  persistentFilePath: /tmp/marina
  sentryurlfrontend: https://key@localhost/project
  security:
    enable-csrf: false
    redirecturl:
      frontend: http://localhost:3000
      logout: http://localhost:8090/auth/realms/devenv/protocol/openid-connect/logout?redirect_uri=${application.security.redirecturl.frontend}
    cors:
      enable: true
      allow-origin: ${application.security.redirecturl.frontend}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    metrics:
      enable: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
